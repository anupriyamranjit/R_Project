sum(data_original$isFlaggedFraud)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Import Data
data1 <- read.csv('./Fraud.csv')
# Copy Data
data_original <- data1
# See Structure of Data and Summary for any issues
str(data_original)
summary(data_original)
# Check Number of NA values in data
sum(is.na(data_original))
sum(data_original$isFlaggedFraud)
# Does the data make sense
sum(data_original$oldbalanceOrg - data_original$newbalanceOrig)
# Does the data make sense
sum(abs(data_original$oldbalanceOrg - data_original$newbalanceOrig)
# Does the data make sense
sum(abs(data_original$oldbalanceOrg - data_original$newbalanceOrig))
# Does the data make sense
sum(abs(data_original$oldbalanceOrg - data_original$newbalanceOrig))
sum(amount)
# Does the data make sense
sum(abs(data_original$oldbalanceOrg - data_original$newbalanceOrig))
sum(data_original$amount)
# Does the data make sense
sum(abs(data_original$oldbalanceOrg - data_original$newbalanceOrig))
sum(data_original$amount)
# Does the data make sense
sum(abs(data_original$oldbalanceOrg - data_original$newbalanceOrig))
# Does the data make sense
old = sum(abs(data_original$oldbalanceOrg))
new = sum(abs(data_original$newbalanceOrig))
abs(old - new) == sum(data_original$amount)
# Does the data make sense
old = sum(abs(data_original$oldbalanceOrg))
new = sum(abs(data_original$newbalanceOrig))
abs(old - new)
== sum(data_original$amount)
# Does the data make sense
old = sum(abs(data_original$oldbalanceOrg))
new = sum(abs(data_original$newbalanceOrig))
abs(old - new)
sum(data_original$amount)
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-IN"]))
old <- sum(abs(data_original$newbalanceOrg[data_original$type == "CASH-IN"]))
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-IN"]))
new <- sum(abs(data_original$newbalanceOrg[data_original$type == "CASH-IN"]))
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-IN"]))
new <- sum(abs(data_original$newbalanceOrig[data_original$type == "CASH-IN"]))
abs(old - new)
sum(data_original$amount)
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-IN"]))
new <- sum(abs(data_original$newbalanceOrig[data_original$type == "CASH-IN"]))
abs(old - new)
sum(data_original$amount)
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-IN"]))
print(old)
new <- sum(abs(data_original$newbalanceOrig[data_original$type == "CASH-IN"]))
print(new)
abs(old - new)
sum(data_original$amount)
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-IN"]))
print(old)
new <- sum(abs(data_original$newbalanceOrig[data_original$type == "CASH-IN"]))
print(new)
abs(old - new)
sum(data_original$amount[data_original$type == "CASH-IN"])
# Does the data make sense
old <- sum(abs(data_original$oldbalanceOrg[data_original$type == "CASH-OUT"]))
print(old)
new <- sum(abs(data_original$newbalanceOrig[data_original$type == "CASH-OUT"]))
print(new)
abs(old - new)
sum(data_original$amount[data_original$type == "CASH-OUT"])
data_original[duplicated(data_original)]
cash_out_rows <- data_original[data_original$type == "CASH_OUT", ]
cash_out_rows
data_original$merchant <- ifelse(substr(data_original$nameDest, 1, 1) == 'M', TRUE, FALSE)
View(data_original)
View(data_original)
data_original$merchant <- ifelse(substr(data_original$nameDest, 1, 1) == 'M', TRUE, FALSE)
data_original$isFraud <- as.logical(data_original$isFraud)
View(data_original)
View(data_original)
# Preprocess Data
data_original$merchant <- ifelse(substr(data_original$nameDest, 1, 1) == 'M', TRUE, FALSE)
data_original$isFraud <- as.logical(data_original$isFraud)
data_original$isFlaggedFraud <- NULL
View(data_original)
knitr::opts_chunk$set(echo = TRUE)
pgdata <- read.csv("pilgrim_bank_data.csv")
pgdata_original <- pgdata
str(pgdata)
pgdata$X9District <- as.factor(pgdata$X9District)
str(pgdata)
summary(pgdata)
hist(pgdata$X9Profit)
plot(density(pgdata$X9Profit))
plot(ecdf(pgdata$X9Profit))
pairs(~X9Age+X9Inc+X9Tenure+X9Profit,data=pgdata[sample(nrow(pgdata),100),],main="Plots")
# compact version
pgdata$IncMeaned <- pgdata$X9Inc
pgdata$IncMeaned[is.na(pgdata$IncMeaned)] <- mean(pgdata$X9Inc[!is.na(pgdata$X9Inc)])
# using more variables to make it more readable
ageMissing <- is.na(pgdata$X9Age)
meanAge <-mean(pgdata$X9Age[!ageMissing])
pgdata$AgeMeaned <- pgdata$X9Age
pgdata$AgeMeaned[ageMissing]<-meanAge
View(pgdata)
pgdata$AgeExists <- !is.na(pgdata$X9Age)
pgdata$IncExists <- !is.na(pgdata$X9Inc)
pgdata$X9District <- as.factor(pgdata$X9District)
pgdata$y <- !is.na(pgdata$X0Profit)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Import Data
data_original <- read.csv('./Fraud.csv')
# Copy Data
data_copy <- data_original
# See Structure of Data and Summary for any issues
str(data_copy)
summary(data_copy)
# Check Number of NA values in data
sum(is.na(data_copy))
# Preprocess Data
data_copy$merchant <- ifelse(substr(data_copy$nameDest, 1, 1) == 'M', TRUE, FALSE)
data_copy$isFraud <- as.logical(data_copy$isFraud)
data_copy$isFlaggedFraud <- NULL
as.factor?
q
?as.factor
# Preprocess Data
data_copy$merchant <- ifelse(substr(data_copy$nameDest, 1, 1) == 'M', TRUE, FALSE)
data_copy$isFraud <- as.logical(data_copy$isFraud)
data_copy$isFlaggedFraud <- NULL
data_copy$type <- as.factor(data_copy$type)
# Preprocess Data
data_copy$merchant <- ifelse(substr(data_copy$nameDest, 1, 1) == 'M', TRUE, FALSE)
data_copy$isFraud <- as.logical(data_copy$isFraud)
data_copy$isFlaggedFraud <- NULL
data_copy$type <- as.factor(data_copy$type)
data_copy
# Preprocess Data
data_copy$merchant <- ifelse(substr(data_copy$nameDest, 1, 1) == 'M', TRUE, FALSE)
data_copy$isFraud <- as.logical(data_copy$isFraud)
data_copy$isFlaggedFraud <- NULL
data_copy$type <- as.factor(data_copy$type)
data_copy
summary(data_copy)
